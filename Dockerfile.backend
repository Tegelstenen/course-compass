
# Dockerfile to build the BACKEND image

#----- STAGE 1
FROM node:23.6-alpine AS base
WORKDIR /app

# This is root package with workspaces, 
# hence the Docker workdir structure /app/backend-nest
COPY package*.json ./
EXPOSE 8080

#----- STAGE 2
# BUIDLER, installs dependencies and builds projects for production
FROM base AS builder
WORKDIR /app
COPY backend-nest/. ./backend-nest
COPY types/ ./types 
RUN npm install
# RUN npm ci

# docker:fe:build is custom script in package to handle workspaces
RUN npm run docker:be:build

#----- STAGE 3
# PRODUCTION, finalizes the production build
FROM base AS production
WORKDIR /app
ENV NODE_ENV=production

RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001 -G nodejs
USER nodejs

# Needed to give access (chown) to some modules that required root access
COPY --from=builder --chown=nodejs:nodejs /app/backend-nest/node_modules /app/node_modules
COPY --from=builder --chown=nodejs:nodejs /app/backend-nest/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/package.json ./package.json
COPY --from=builder --chown=nodejs:nodejs /app/package-lock.json ./package-lock.json

RUN npm install --omit=dev --no-audit

CMD ["npm", "run", "start:prod"]
